import os
from collections import Counter

source_dir = r'D:\Data\speech\dictionaries\GP\cleaned'
output_dir = r'D:\Data\speech\dictionaries\GP\ipa'
os.makedirs(output_dir, exist_ok=True)

lang_codes = ['AR', 'BG', 'CH_char', 'CH', 'CR', 'CZ', 'FR', 'GE', 'HA', 'JA', 'KO', 'KO_jamo', 'PL', 'PO', 'RU', 'SA', 'SP', 'SW', 'TH', 'TU', 'UA', 'VN', 'WU']
lang_codes = ['WU']

phone_mappings = {
    'AR': {
        'i': 'i',
        'il': 'iː',
        'u': 'u',
        'ul': 'uː',
        'al': 'aː',
        'b': 'b',
        't': 't',
        'tl': 'tː',
        'd': 'd',
        'dl': 'dː',
        'k': 'k',
        'q': 'q',
        'Q': 'ʔ',
        'm': 'm',
        'm;': 'mː',
        'n': 'n',
        'nl': 'nː',
        'r': 'r',
        'rl': 'rː',
        'f': 'f',
        'T': 'θ',
        'D': 'ð',
        's': 's',
        'sl': 'sː',
        'z': 'z',
        'S': 'ʃ',
        'Sl': 'ʃː',
        'Z': 'ʒ',
        'C': 'ç',
        'Cl': 'çː',
        'x': 'x',
        'G': 'ɣ',
        'rr': 'ʁ',
        'H': 'ħ',
        'Hq': 'ʕ',
        'h': 'h',
        'j': 'j',
        'l': 'l',
        'll': 'lː',
        'w': 'w',
        'aI': 'aɪ',
        'aU': 'aʊ'
    },
    'BG': {
        'i': 'i',
        'u': 'u',
        'Y': 'ɤ',
        'e': 'ɛ',
        'o': 'ɔ',
        'a': 'a',
        'ya': 'ja',
        'yu': 'ju',
        'p': 'p',
        'pj': 'pʲ',
        'b': 'b',
        'bj': 'bʲ',
        't': 't',
        'tj': 'tʲ',
        'd': 'd',
        'dj': 'dʲ',
        'k': 'k',
        'kj': 'kʲ',
        'g': 'g',
        'gj': 'gʲ',
        'm': 'm',
        'mj': 'mʲ',
        'n': 'n',
        'nj': 'nʲ',
        'r': 'r',
        'rj': 'rʲ',
        'f': 'f',
        'fj': 'fʲ',
        'v': 'v',
        'vj': 'vʲ',
        's': 's',
        'sj': 'sʲ',
        'z': 'z',
        'zj': 'zʲ',
        'S': 'ʃ',
        'Z': 'ʒ',
        'x': 'x',
        'j': 'j',
        'l': 'l',
        'lj': 'lʲ',
        'ts': 'ts',
        'tS': 'tʃ',
        'dz': 'dz',
        'dZ': 'dʒ',
    },
    'CH': {},
    'CR': {
        'i': 'i',
        'u': 'u',
        'e': 'e',
        'o': 'o',
        'a': 'a',
        'p': 'p',
        'b': 'b',
        't': 't',
        'd': 'd',
        'k': 'k',
        'g': 'g',
        'm': 'm',
        'n': 'n',
        'nj': 'ɲ',
        'r': 'r',
        'f': 'f',
        'v': 'v',
        's': 's',
        'z': 'z',
        'S': 'ʃ',
        'Z': 'ʒ',
        'x': 'x',
        'j': 'j',
        'l': 'l',
        'L': 'ʎ',
        'ts': 'ts',
        'tS': 'tʃ',
        'dZ': 'dʒ',
        'dzp': 'dʑ',
        'tcp': 'tɕ',
    },
    'CZ': {
        'i': 'ɪ',
        'u': 'u',
        'o': 'o',
        'e': 'ɛ',
        'a': 'a',
        'ii': 'iː',
        'uu': 'uː',
        'oo': 'oː',
        'ee': 'eː',
        'aa': 'aː',
        'aw': 'au',
        'ew': 'ɛu',
        'ow': 'ou',
        'p': 'p',
        'b': 'b',
        't': 't',
        'd': 'd',
        'tj': 'c',
        'dj': 'ɟ',
        'k': 'k',
        'g': 'g',
        'm': 'm',
        'mg': 'm',
        'n': 'n',
        'nj': 'ɲ',
        'ng': 'ŋ',
        'r': 'r',
        'f': 'f',
        'v': 'v',
        's': 's',
        'z': 'z',
        'S': 'ʃ',
        'Z': 'ʒ',
        'x': 'x',
        'h': 'ɦ',
        'j': 'j',
        'l': 'l',
        'rsh': 'r̝', # GP documentation has this trill separated out into voiced and voiceless versions, but I'm pretty
        'rzh': 'r̝', # sure it should just be one, Czech has two trills with slightly different places of articulation, right?
        'ts': 'ts',
        'tS': 'tʃ',
    },
    'FR': {
        'i': 'i',
        'y': 'y',
        'u': 'u',
        'e': 'e',
        'EU': 'ø',
        'o': 'o',
        'AX': 'ə',
        'E': 'ɛ',
        'OE': 'œ',
        'O': 'ɔ',
        'a': 'a',
        'AE': 'ə',  # GP documentation doesn't call this a schwa (says it's open front rounded), but I really think it should be
        'E~': 'ɛ̃',
        'A~': 'ɑ̃',
        'o~': 'ɔ̃',
        'OE~': 'œ̃',
        'P': 'p',
        'B': 'b',
        'T': 't',
        'D': 'd',
        'K': 'k',
        'G': 'g',
        'M': 'm',
        'N': 'n',
        'NJ': 'ɲ',
        'NG': 'ŋ',
        'F': 'f',
        'V': 'v',
        'S': 's',
        'Z': 'z',
        'SH': 'ʃ',
        'ZH': 'ʒ',
        'R': 'ʁ',
        'h': 'h',
        'H': 'ɥ',
        'J': 'j',
        'W': 'w',
        'L': 'l',
    },
    'GE': {
        'i': 'ɪ', # GP has these as tense vowels rather than lax ones, but I believe lax is the usual description
        'il': 'iː',
        'u': 'ʊ',
        'ul': 'uː',
        'ue': 'ʏ',
        'uel': 'yː',
        'e': 'ɛ',
        'el': 'eː',
        'o': 'ɔ',
        'ol': 'oː',
        'etu': 'ə',
        'ae': 'ɛ',
        'oe': 'œ',
        'oel': 'øː',
        'atu': 'ɐ',
        'a': 'a',
        'al': 'aː',
        'aI': 'aɪ',
        'aU': 'aʊ',
        'eU': 'ɔʏ',
        'p': 'p',
        'b': 'b',
        't': 't',
        'd': 'd',
        'k': 'k',
        'g': 'g',
        'm': 'm',
        'n': 'n',
        'ng': 'ŋ',
        'r': 'r',
        'f': 'f',
        'v': 'v',
        's': 's',
        'z': 'z',
        'S': 'ʃ',
        'C': 'ç',
        'x': 'x',
        'h': 'h',
        'j': 'j',
        'l': 'l',
        'ts': 'ts',
    },
    'HA': {
        'i': 'i',
        'iL': 'iː',
        'u': 'u',
        'uL': 'uː',
        'e': 'e',
        'eL': 'eː',
        'o': 'o',
        'oL': 'oː',
        'a': 'a',
        'aL': 'aː',
        'aI': 'ai',
        'aU': 'au',
        'm': 'm',
        'n': 'n',
        'p': 'p',
        't': 't',
        'c': 'c',
        'k': 'k',
        'Q': 'ʔ',
        'b': 'b',
        'd': 'd',
        'dZ': 'dʒ',
        'g': 'g',
        'TS': 'tsʼ',
        'KR': 'cʼ',
        'K': 'kʼ',
        'B': 'ɓ',
        'D': 'ɗ',
        'F': 'ɸ',
        's': 's',
        'S': 'ʃ',
        'h': 'h',
        'z': 'z',
        'r': 'r',
        'R': 'ɽ',
        'l': 'l',
        'j': 'j',
        'w': 'w',
    },
    'JA': {
        'i': 'i',
        'il': 'iː',
        'W': 'ɯ',
        'Wl': 'ɯː',
        'e': 'e',
        'el': 'eː',
        'o': 'o',
        'ol': 'oː',
        'ab': 'ɑ',
        'abl': 'ɑː',
        'p': 'p',
        'b': 'b',
        't': 't',
        'd': 'd',
        'k': 'k',
        'g': 'g',
        'm': 'm',
        'n': 'n',
        'nq': 'ɴ',
        'l': 'ɽ',
        'F': 'ɸ',
        's': 's',
        'z': 'z',
        'h': 'h',
        'j': 'j',
        'w': 'w',
        'S': 'ɕ',
        'ts': 'ts',
        'tS': 'tɕ',
        'dZ': 'dʑ',
    },
    'KO': {
        'A': 'a',
        'AE': 'ɛ',
        'E': 'e',
        'I': 'i',
        'O': 'o',
        'EO': 'ʌ',
        'OE': 'ø',
        'U': 'u',
        'EU': 'ɯ',
        'UE': 'y',
        'eul': 'ɰi',
        'iA': 'ja',
        'iE': 'je',
        'iEO': 'jʌ',
        'iO': 'jo',
        'iU': 'ju',
        'oA': 'wa',
        'uEO': 'wʌ',
        'CHh': 'tɕʰ',
        'J': 'tɕ',
        'JJ': 't͈ɕ',
        'S': 's',
        'SS': 's͈',
        'M': 'm',
        'N': 'n',
        'NG': 'ŋ',
        'H': 'h',
        'Ph': 'pʰ',
        'B': 'p',
        'p': 'p̚',
        'BB': 'p͈',
        'Th': 'tʰ',
        'D': 't',
        't': 't̚',
        'DD': 't͈',
        'Kh': 'kʰ',
        'G': 'k',
        'k': 'k̚',
        'GG': 'k͈',
        'R': 'ɾ',
        'L': 'l',
    },
    'PL': {
        'i': 'i',
        'i2': 'ɨ',
        'u': 'u',
        'e': 'ɛ',
        'o': 'ɔ',
        'eo5': 'ɛ̃',
        'oc5': 'ɔ̃',
        'a': 'a',
        'p': 'p',
        'b': 'b',
        't': 't',
        'd': 'd',
        'c': 'ts', # GP says this should be /c/, but I don't think so
        'k': 'k',
        'g': 'g',
        'm': 'm',
        'n': 'n',
        'n~': 'ɲ', # GP says this should be /ɳ/, but I don't think so
        'r': 'r',
        'f': 'f',
        'v': 'v',
        's': 's',
        'z': 'z',
        'S': 'ʂ', # GP says this should be /ʃ/, but I don't think so
        'Z': 'ʐ', # GP says this should be /ʒ/, but I don't think so
        'h': 'x', # GP says this should be /h/, but I don't think so?
        'j': 'j',
        'l': 'l',
        'dz': 'dz', # GP doesn't say what this should be
        'dZ': 'dʐ', # GP doesn't say what this should be
        'tS': 'tʂ', # GP doesn't say what this should be
        'tsj': 'tɕ', # GP doesn't say what this should be
        'dzj': 'dʑ', # GP doesn't say what this should be
        'w': 'w',
        'sj': 'ɕ',
        'zj': 'ʑ',
    },
    'PO': {
        'I+': 'i',
        'I~': 'ĩ',
        'I~+': 'ĩ',
        'U+': 'u',
        'U~': 'ũ',
        'U~+': 'ũ',
        'E+': 'e',
        'E~': 'ẽ',
        'E~+': 'ẽ',
        'O+': 'o',
        'O~': 'õ',
        'O~+': 'õ',
        'A+': 'a',
        'A~': 'ɐ̃',
        'A~+': 'ɐ̃',
        'I': 'i',
        'IX': 'ɪ',
        'UX': 'ʊ',
        'U': 'ʊ',
        'E': 'ɛ',
        'O': 'ɔ',
        'A': 'ɐ',
        'P': 'p',
        'B': 'b',
        'T': 't',
        'D': 'd',
        'K': 'k',
        'G': 'g',
        'M': 'm',
        'N': 'n',
        'NJ': 'ɲ',
        'R': 'ɾ', # GP says this is /r/, but I don't think so?
        'F': 'f',
        'V': 'v',
        'S': 's',
        'Z': 'z',
        'SCH': 'ʃ',
        'RR': 'ʁ',
        'L': 'l',
        'LJ': 'ʎ',
        'DJ': '', # Not too sure, but it seems like there are some bigger issues with collapsing z/ʒ
        'TJ'
        'W': '',
        'W~': '',
    },
    'RU': {

    },
    'SA': {
        'dh': 'ð',
        'kh': 'x',
        'th': 'θ',
        'g': 'ɡ',
        'ny': 'ɲ',
        'ng~': 'ŋ',
        'ng': 'ᵑɡ',
        'nj': 'ⁿdʒ',
        'sh': 'ʃ',
        'ch': 'tʃ',
        'nz': 'ⁿz',
        'nd': 'ⁿd',
        'mb': 'ᵐb',
        'mv': 'ᶬv',
        'j': 'dʒ',
        'y': 'j',
        'o': 'ɔ',
        'a': 'ɑ',
        'e': 'ɛ',
    },
    'SP': {},
    'SW': {},
    'TH': {},
    'TU': {},
    'UA': {},
    'VN': {},
    'WU': {

    },
}
phone_mappings['CH_char'] = phone_mappings['CH']
phone_mappings['KO_jamo'] = phone_mappings['KO']

def read_source(lang):
    path = os.path.join(source_dir, '{}_cleaned.txt'.format(lang))
    graphemes = set()
    phones = set()
    dictionary = []
    with open(path, 'r', encoding='utf8') as f:
        for line in f:
            line = line.strip()
            line = line.split()
            word = line[0]
            pronunciation = line[1:]
            graphemes.update(word)
            phones.update(pronunciation)
            dictionary.append((word, pronunciation))
    return dictionary, graphemes, phones


def save_dictionary(dictionary, lang):
    path = os.path.join(output_dir, '{}.txt'.format(lang))
    with open(path, 'w', encoding='utf8') as f:
        for w, p in dictionary:
            f.write('{}\t{}\n'.format(w, ' '.join(p)))


def fix_pronunciations(dictionary, lang):
    filtered_dictionary = []
    phones = Counter()
    for word, pronunciation in dictionary:
        # Language specific conversions
        new_pron = []
        for p in pronunciation:
            if p in phone_mappings[lang]:
                p = phone_mappings[lang][p]
            new_pron.append(p)
        if (word, new_pron) not in filtered_dictionary:
            filtered_dictionary.append((word, new_pron))
            phones.update(new_pron)
    return filtered_dictionary, phones

def process_language(lang):
    print('Processing', lang)
    dictionary, input_graphemes, input_phones = read_source(lang)
    print('Input graphemes', sorted(input_graphemes))
    print('Input phones', sorted(input_phones))
    filtered, output_phones = fix_pronunciations(dictionary, lang)
    print('Output phones', sorted(output_phones))
    print('Output phones', sorted(output_phones.items(), key= lambda x: -x[1]))
    save_dictionary(filtered, lang)

if __name__ == '__main__':
    for code in lang_codes:
        process_language(code)